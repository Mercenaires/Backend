/*
 * This file was generated by the Gradle 'init' task.
 *
 * This generated file contains a sample Java application project to get you started.
 * For more details on building Java & JVM projects, please refer to https://docs.gradle.org/8.10.1/userguide/building_java_projects.html in the Gradle documentation.
 */

plugins {
    id 'java'
    id 'org.springframework.boot' version '3.3.3'
    id 'io.spring.dependency-management' version '1.1.0'
    // Pour generer la documentation
    id 'org.asciidoctor.jvm.convert' version '4.0.2'
    id 'org.asciidoctor.jvm.pdf' version '4.0.2'
}

asciidoctor {
    sourceDir = file('src/docs/asciidoc')
    outputDir = file("${buildDir}/docs")
}														Tout ca comme dans le le represontori Template-Java-API du prof
asciidoctorj {
    requires 'rouge'
    modules {
        diagram.use()
        diagram.version '1.5.16'
    }
    attributes 'build-gradle': file('build.gradle'),
            'sourcedir': project.sourceSets.main.java.srcDirs[0],
            'source-highlighter': 'rouge',
            'rouge-style': 'github',
            'rouge-theme': 'github'

}
asciidoctorPDF {
    sourceDir = file('src/docs/asciidoc')
    outputDir = file("${buildDir}/docs")
}

group = 'org.example'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
    // Use Maven Central for resolving dependencies.
    mavenCentral()
}

dependencies {
    // Spring Boot Web Starter pour créer des applications web et des APIs REST
    implementation 'org.springframework.boot:spring-boot-starter-web'
    testImplementation 'org.springframework.boot:spring-boot-starter-test'
    implementation 'org.seleniumhq.selenium:selenium-java:4.10.0'  // Remplace par la dernière version si nécessaire


    // Si tu préfères utiliser WebClient (en option)
    // implementation 'org.springframework.boot:spring-boot-starter-webflux'
}

test {
    useJUnitPlatform()
}

// Apply a specific Java toolchain to ease working on different environments.
java {
    toolchain {
        languageVersion = JavaLanguageVersion.of(21)  // Tu peux garder Java 21 si c'est intentionnel
    }
}

/* Supprimé, car inutile dans Spring Boot :
application {
    // Define the main class for the application.
    mainClass = 'org.example.App'
}
*/

// edit the build task to generate the asciidoc pdf too
tasks.named('asciidoctor').configure {
    dependsOn tasks.named('asciidoctorPdf')
}
tasks.named('build').configure {
    dependsOn tasks.named('asciidoctor')
}
