name: Java CI with Gradle and SonarCloud

on:
  push:
    branches: 
      - main
      - init_develop
  pull_request:
    types: [opened, synchronize, reopened]

jobs:
  build:

    name: Build and Test
    runs-on: ubuntu-latest
    permissions:
      contents: read

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Nécessaire pour l'analyse de SonarCloud
    
    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache Gradle files
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Make gradlew executable
      run: chmod +x ./gradlew

    - name: Build with Gradle Wrapper
      run: ./gradlew build

    - name: Run tests
      run: ./gradlew test

    - name: Archive test results
      if: always()
      uses: actions/upload-artifact@v3
      with:
        name: test-results
        path: build/test-results/test

  sonarcloud-analysis:

    name: SonarCloud Analysis
    runs-on: ubuntu-latest
    permissions:
      contents: read
      # Ajoutez "id-token: write" si vous utilisez SonarCloud avec un système OIDC

    steps:
    - uses: actions/checkout@v4
      with:
        fetch-depth: 0  # Nécessaire pour l'analyse de SonarCloud

    - name: Set up JDK 17
      uses: actions/setup-java@v4
      with:
        java-version: '17'
        distribution: 'temurin'

    - name: Cache SonarCloud packages
      uses: actions/cache@v4
      with:
        path: ~/.sonar/cache
        key: ${{ runner.os }}-sonar
        restore-keys: ${{ runner.os }}-sonar

    - name: Cache Gradle files
      uses: actions/cache@v3
      with:
        path: ~/.gradle/caches
        key: ${{ runner.os }}-gradle-${{ hashFiles('**/*.gradle*', '**/gradle-wrapper.properties') }}
        restore-keys: |
          ${{ runner.os }}-gradle-

    - name: Build and Analyze with SonarCloud
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}  # Nécessaire pour obtenir les informations sur les PR
        SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}    # Votre token d'authentification SonarCloud
      run: ./gradlew build sonar --info
